<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xbhy.workorder.mapper.StaffRoleMapper">

    <resultMap id="BaseResultMap" type="com.xbhy.workorder.entity.StaffRole">
        <!--@Table staff_role-->
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="staffId" column="staff_id" jdbcType="INTEGER"/>
        <result property="roleId" column="role_id" jdbcType="INTEGER"/>
        <result property="deleted" column="deleted" jdbcType="BOOLEAN"/>
        <result property="createBy" column="create_by" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateBy" column="update_by" jdbcType="INTEGER"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="BaseResultMap">
        select id, staff_id, role_id, deleted, create_by, create_time, update_by, update_time
        from staff_role
        where id = #{id}
    </select>
    <!--查询单个-->
    <select id="queryByStaffId" resultType="com.xbhy.workorder.entity.StaffRole">
        select sr.id, sr.staff_id, sr.role_id, sr.deleted, sr.create_by, sr.create_time, sr.update_by, sr.update_time,
               role.role_name, role.role_key from staff_role sr
        left join sys_role role on sr.role_id=role.role_id
        where staff_id = #{staffId}
    </select>
    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="BaseResultMap">
        select
          id, staff_id, role_id, deleted, create_by, create_time, update_by, update_time
        from staff_role
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="staffId != null">
                and staff_id = #{staffId}
            </if>
            <if test="roleId != null">
                and role_id = #{roleId}
            </if>
            <if test="deleted != null">
                and deleted = #{deleted}
            </if>
            <if test="createBy != null">
                and create_by = #{createBy}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="updateBy != null">
                and update_by = #{updateBy}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="BaseResultMap">
        select
          id, staff_id, role_id, deleted, create_by, create_time, update_by, update_time
        from work_order.staff_role
    </select>
    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from staff_role
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="staffId != null">
                and staff_id = #{staffId}
            </if>
            <if test="roleId != null">
                and role_id = #{roleId}
            </if>
            <if test="deleted != null">
                and deleted = #{deleted}
            </if>
            <if test="createBy != null">
                and create_by = #{createBy}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="updateBy != null">
                and update_by = #{updateBy}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into staff_role(staff_id, role_id, deleted, create_by, create_time, update_by, update_time)
        values (#{staffId}, #{roleId}, #{deleted}, #{createBy}, #{createTime}, #{updateBy}, #{updateTime})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into staff_role(staff_id, role_id, deleted, create_by, create_time, update_by, update_time)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.staffId}, #{entity.roleId}, #{entity.deleted}, #{entity.createBy}, #{entity.createTime}, #{entity.updateBy}, #{entity.updateTime})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into staff_role(staff_id, role_id, deleted, create_by, create_time, update_by, update_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.staffId}, #{entity.roleId}, #{entity.deleted}, #{entity.createBy}, #{entity.createTime}, #{entity.updateBy}, #{entity.updateTime})
        </foreach>
        on duplicate key update
        staff_id = values(staff_id),
        role_id = values(role_id),
        deleted = values(deleted),
        create_by = values(create_by),
        create_time = values(create_time),
        update_by = values(update_by),
        update_time = values(update_time)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update staff_role
        <set>
            <if test="staffId != null">
                staff_id = #{staffId},
            </if>
            <if test="roleId != null">
                role_id = #{roleId},
            </if>
            <if test="deleted != null">
                deleted = #{deleted},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <update id="deleteById">
        update staff_role set deleted =1 where id = #{id}
    </update>

</mapper>

